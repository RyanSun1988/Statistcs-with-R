m1 <- lm(audience_score ~  title_type +genre +mpaa_rating + best_pic_nom  + best_dir_win +sqrt(runtime)  +dvd_rel_month+   studio, data = movies_no_na)
movies_no_na <- movies_no_na %>% mutate(resid=.resid)
ggplot(data = m1,aes(x=sqrt(runtime), y=.resid))+geom_point()
m1 <- lm(audience_score ~  title_type +genre +mpaa_rating + best_pic_nom  + best_dir_win +runtime  +dvd_rel_month+   studio, data = movies_no_na)
ggplot(data = m1,aes(x=runtime, y=.resid))+geom_point()
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>60,runtime<200)
m1 <- lm(audience_score ~  title_type +genre +mpaa_rating + best_pic_nom  + best_dir_win +runtime  +dvd_rel_month+   studio, data = movies_no_na)
summary(m1)
ggplot(data = m1,aes(x=runtime, y=.resid))+geom_point()
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>60,runtime<180)
m1 <- lm(audience_score ~  title_type +genre +mpaa_rating + best_pic_nom  + best_dir_win +runtime  +dvd_rel_month+   studio, data = movies_no_na)
summary(m1)
ggplot(data = m1,aes(x=runtime, y=.resid))+geom_point()
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180)
m1 <- lm(audience_score ~  title_type +genre +mpaa_rating + best_pic_nom  + best_dir_win +runtime  +dvd_rel_month+   studio, data = movies_no_na)
summary(m1)
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,title_type=="Feature Film")
m1 <- lm(audience_score ~  title_type +genre +mpaa_rating + best_pic_nom  + best_dir_win +runtime  +dvd_rel_month+   studio, data = movies_no_na)
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,title_type=="Feature Film")
m1 <- lm(audience_score ~  genre +mpaa_rating + best_pic_nom  + best_dir_win +runtime  +dvd_rel_month+   studio, data = movies_no_na)
summary(m1)
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_pic_nom  + best_dir_win +runtime  +dvd_rel_month+   studio, data = movies_no_na)
summary(m1)
library(ggplot2)
library(dplyr)
library(statsr)
library(GGally)
load("movies.Rdata")
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +critics_score, data = movies_no_na)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_actress_win,  studio, critics_score.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +critics_score, data = movies_no_na)
summary(m1)
anova(m1)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_actress_win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +1/(critics_score), data = movies_no_na)
summary(m1)
anova(m1)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_actress_win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +exp(critics_score), data = movies_no_na)
summary(m1)
anova(m1)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_actress_win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +exp(critics_score), data = movies_no_na)
summary(m1)
anova(m1)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_actress_win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +log10(critics_score), data = movies_no_na)
summary(m1)
anova(m1)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_actress_win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +sqrt(critics_score), data = movies_no_na)
summary(m1)
anova(m1)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_actress_win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +(critics_score*critics_score), data = movies_no_na)
summary(m1)
anova(m1)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_actress_win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +(critics_score), data = movies_no_na)
summary(m1)
anova(m1)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
m7 <- lm(audience_score ~  runtime_convert, data = movies_no_na)
summary(m7)
anova(m7)
ggplot(data = m7,aes(x=audience_score, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m8 <- lm(audience_score ~  dvd_rel_month_convert, data = movies_no_na)
summary(m8)
anova(m8)
ggplot(data = m8,aes(x=audience_score, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
#Considered about the two converted variable, we have our final model.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
movies_no_na <- movies_no_na %>% mutate(thtr_rel_month_convert=exp(dvd_rel_month))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + 1/(critics_score), data = movies_no_na)
summary(m_final)
anova(m_final)
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + exp(critics_score), data = movies_no_na)
summary(m_final)
anova(m_final)
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + log10(critics_score), data = movies_no_na)
summary(m_final)
anova(m_final)
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + log10(critics_score), data = movies_no_na)
summary(m_final)
anova(m_final)
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + sqrt(critics_score), data = movies_no_na)
summary(m_final)
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + (critics_score*critics_score), data = movies_no_na)
summary(m_final)
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + (critics_score), data = movies_no_na)
summary(m_final)
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month  + best_actor_actress_win + studio + (critics_score), data = movies_no_na)
summary(m_final)
movies_no_na <- movies_no_na %>% mutate(thtr_rel_month_convert=log10(dvd_rel_month))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + (critics_score), data = movies_no_na)
summary(m_final)
movies_no_na <- movies_no_na %>% mutate(thtr_rel_month_convert=sqrt(dvd_rel_month))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + (critics_score), data = movies_no_na)
summary(m_final)
movies_no_na <- movies_no_na %>% mutate(thtr_rel_month_convert=(dvd_rel_month*dvd_rel_month))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_month_convert+ thtr_rel_month_convert  + best_actor_actress_win + studio + (critics_score), data = movies_no_na)
summary(m_final)
library(ggplot2)
library(dplyr)
library(statsr)
library(GGally)
load("movies.Rdata")
movies <- movies %>% mutate(score_dif=critics_score-audience_score)
qqnorm(movies$score_dif)
#We can tell from the plot that, there's only some minor skew. Since the samples are ramdomly selected, so we can say that the distribution of the difference in score is close to normal.
movies %>% summarise(mean(score_dif),sd(score_dif))
pt((mean(movies$score_dif)-0)/(sd(movies$score_dif)/sqrt(651)),(651-1))
#Since the p-value is pretty small, so we can refuse the null hypothesis. The opinion of the critics and the audiences are different. We will try to figure out whether there's a connection between the score of critics and the audience in the next part.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_win, best_actress win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +critics_score, data = movies_no_na)
summary(m1)
anova(m1)
ggplot(data = m1,aes(x=.fitted, y=.resid))+geom_point()
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_win, best_actress win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
#Since there's not any abvious linear relationship.
#After Everything I have tried, following two variables can be a little better by changing their form.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
m7 <- lm(audience_score ~  runtime_convert, data = movies_no_na)
summary(m7)
anova(m7)
ggplot(data = m7,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m8 <- lm(audience_score ~  dvd_rel_month_convert, data = movies_no_na)
summary(m8)
anova(m8)
ggplot(data = m8,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
question_data$runtime_convert2<-cut(question_data$runtime, c(0,90,120,150,999) ,labels = c('Short','Medium','Long', 'Very long'))
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_win, best_actress win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
#Since there's not any abvious linear relationship.
#After Everything I have tried, following two variables can be a little better by changing their form.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
m7 <- lm(audience_score ~  runtime_convert, data = movies_no_na)
summary(m7)
anova(m7)
ggplot(data = m7,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m8 <- lm(audience_score ~  dvd_rel_month_convert, data = movies_no_na)
summary(m8)
anova(m8)
ggplot(data = m8,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na$runtime_convert2<-cut(movies_no_na$runtime, c(0,90,120,150,999) ,labels = c('Short','Medium','Long', 'Very long'))
movies_no_na$thtr_rel_quarter_convert2<-cut(movies_no_na$thtr_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
movies_no_na$dvd_rel_quarter_convert2<-cut(movies_no_na$dvd_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
#Considered about the two converted variable, we have our final model.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert2 +dvd_rel_month_convert+ thtr_rel_month  + best_actor_actress_win + studio + critics_score, data = movies_no_na)
summary(m_final)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_win, best_actress win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
#Since there's not any abvious linear relationship.
#After Everything I have tried, following two variables can be a little better by changing their form.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
m7 <- lm(audience_score ~  runtime_convert, data = movies_no_na)
summary(m7)
anova(m7)
ggplot(data = m7,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m8 <- lm(audience_score ~  dvd_rel_month_convert, data = movies_no_na)
summary(m8)
anova(m8)
ggplot(data = m8,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na$runtime_convert2<-cut(movies_no_na$runtime, c(0,90,120,150,999) ,labels = c('Short','Medium','Long', 'Very long'))
movies_no_na$thtr_rel_quarter_convert2<-cut(movies_no_na$thtr_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
movies_no_na$dvd_rel_quarter_convert2<-cut(movies_no_na$dvd_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
#Considered about the two converted variable, we have our final model.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert2 +thtr_rel_quarter_convert2+ thtr_rel_month  + best_actor_actress_win + studio + critics_score, data = movies_no_na)
summary(m_final)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_win, best_actress win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
#Since there's not any abvious linear relationship.
#After Everything I have tried, following two variables can be a little better by changing their form.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
m7 <- lm(audience_score ~  runtime_convert, data = movies_no_na)
summary(m7)
anova(m7)
ggplot(data = m7,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m8 <- lm(audience_score ~  dvd_rel_month_convert, data = movies_no_na)
summary(m8)
anova(m8)
ggplot(data = m8,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na$runtime_convert2<-cut(movies_no_na$runtime, c(0,90,120,150,999) ,labels = c('Short','Medium','Long', 'Very long'))
movies_no_na$thtr_rel_quarter_convert2<-cut(movies_no_na$thtr_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
movies_no_na$dvd_rel_quarter_convert2<-cut(movies_no_na$dvd_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
#Considered about the two converted variable, we have our final model.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert2 +dvd_rel_quarter_convert2+ thtr_rel_month  + best_actor_actress_win + studio + critics_score, data = movies_no_na)
summary(m_final)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_win, best_actress win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
#Since there's not any abvious linear relationship.
#After Everything I have tried, following two variables can be a little better by changing their form.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
m7 <- lm(audience_score ~  runtime_convert, data = movies_no_na)
summary(m7)
anova(m7)
ggplot(data = m7,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m8 <- lm(audience_score ~  dvd_rel_month_convert, data = movies_no_na)
summary(m8)
anova(m8)
ggplot(data = m8,aes(x=.fitted, y=.resid))+geom_point()
#Since it has a better adjusted R-square, and there's a less linear relationship. We take this convertion.
movies_no_na$runtime_convert2<-cut(movies_no_na$runtime, c(0,90,120,150,999) ,labels = c('Short','Medium','Long', 'Very long'))
movies_no_na$thtr_rel_quarter_convert2<-cut(movies_no_na$thtr_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
movies_no_na$dvd_rel_quarter_convert2<-cut(movies_no_na$dvd_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
#Considered about the two converted variable, we have our final model.
movies_no_na <- movies_no_na %>% mutate(runtime_convert=(runtime*runtime))
movies_no_na <- movies_no_na %>% mutate(dvd_rel_month_convert=exp(dvd_rel_month))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert2 +dvd_rel_quarter_convert2 + thtr_rel_quarter_convert2 + best_actor_actress_win + studio + critics_score, data = movies_no_na)
summary(m_final)
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_win, best_actress win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +critics_score, data = movies_no_na)
summary(m1)
anova(m1)
ggplot(data = m1,aes(x=.fitted, y=.resid))+geom_point()
#Since there's not any abvious linear relationship.
#We will transform three variables, which I learned from peer review. I'm pretty ambarrassed, because I don't know how to check the name of project. Sorry for that.
movies_no_na$runtime_convert<-cut(movies_no_na$runtime, c(0,90,120,150,999) ,labels = c('Short','Medium','Long', 'Very long'))
movies_no_na$thtr_rel_quarter_convert<-cut(movies_no_na$thtr_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
movies_no_na$dvd_rel_quarter_convert<-cut(movies_no_na$dvd_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_quarter_convert + thtr_rel_quarter_convert + best_actor_actress_win + studio + critics_score, data = movies_no_na)
summary(m_final)
anova(m_final)
#Now let's check the conditions again.
ggplot(data = m_final,aes(x=.fitted, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=title_type, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=genre, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=mpaa_rating, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=best_actor_actress_win, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=runtime_convert, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=dvd_rel_month_convert, y=.resid))+geom_point()
#Let's filter some extreme value first.
movies_no_na <- movies %>% filter(!is.na(dvd_rel_month),runtime>70,runtime<180,studio!="GreyCat Films")
#And for the sake of making a better model, we can change two character variables into numeric variables.
movies_no_na$best_actress_win <- as.character(movies_no_na$best_actress_win)
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("yes")] <- 1
movies_no_na$best_actress_win[movies_no_na$best_actress_win %in% c("no")] <- 0
movies_no_na$best_actress_win <- as.numeric(movies_no_na$best_actress_win)
movies_no_na$best_actor_win <- as.character(movies_no_na$best_actor_win)
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("yes")] <- 1
movies_no_na$best_actor_win[movies_no_na$best_actor_win %in% c("no")] <- 0
movies_no_na$best_actor_win <- as.numeric(movies_no_na$best_actor_win)
#We are gonna create a variable, which indicates whether or not there's a actor or actress ever win an Oscar.
movies_no_na <- movies_no_na %>% mutate( best_actor_actress_win = best_actor_win + best_actress_win )
#Since we are focusing on predicting the audience score before a movie is made, for the purpose of helping people make a better decision on how to make a movie. Following variables will be used: title_type, genre, mpaa_rating, best_dir_win, runtime, dvd_rel_month, thtr_rel_month, best_actor_win, best_actress win,  studio, critics_score.
#Since it take too much pages to show step by step to choose which variable to use, we will jump to the final step to show the result.
m1 <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime  +dvd_rel_month + thtr_rel_month  + best_actor_actress_win + studio +critics_score, data = movies_no_na)
summary(m1)
anova(m1)
ggplot(data = m1,aes(x=.fitted, y=.resid))+geom_point()
#Since there's not any abvious linear relationship.
#We will transform three variables, which I learned from peer review. I'm pretty ambarrassed, because I don't know how to check the name of project. Sorry for that.
movies_no_na$runtime_convert<-cut(movies_no_na$runtime, c(0,90,120,150,999) ,labels = c('Short','Medium','Long', 'Very long'))
movies_no_na$thtr_rel_quarter_convert<-cut(movies_no_na$thtr_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
movies_no_na$dvd_rel_quarter_convert<-cut(movies_no_na$dvd_rel_month, c(0,3,6,9,12) ,labels = c('Q1','Q2','Q3','Q4'))
m_final <- lm(audience_score ~  title_type+genre +mpaa_rating + best_dir_win +runtime_convert +dvd_rel_quarter_convert + thtr_rel_quarter_convert + best_actor_actress_win + studio + critics_score, data = movies_no_na)
summary(m_final)
anova(m_final)
#Now let's check the conditions again.
ggplot(data = m_final,aes(x=.fitted, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=title_type, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=genre, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=mpaa_rating, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=best_actor_actress_win, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=runtime_convert, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=dvd_rel_quarter_convert, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=thtr_rel_quarter_convert, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=studio, y=.resid))+geom_point()
ggplot(data = m_final,aes(x=critics_score, y=.resid))+geom_point()
ggplot(data = m_final,aes(sample=.resid))+stat_qq()
#The conditions seem to fit for me.
